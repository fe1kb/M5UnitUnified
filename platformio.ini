;-----------------------------------------------------------------------
; M5UnitUnified
;-----------------------------------------------------------------------
[platformio]

[env]
build_flags =-Wall -Wextra -Wreturn-local-addr -Werror=format -Werror=return-local-addr
lib_ldf_mode = deep
test_framework = googletest
test_build_src = true
;lib_deps=m5stack/M5Unified
lib_deps= https://github.com/m5stack/M5Unified.git#develop

; --------------------------------
;Choose device
[m5base]
board_build.flash_mode = qio
board_build.f_flash = 80000000L
board_build.f_cpu = 240000000L
monitor_speed = 115200
monitor_filters = esp32_exception_decoder, time
upload_speed = 1500000
test_speed = 115200
test_filter= embedded/*
test_ignore= native/*
platform = espressif32
framework = arduino

[Core]
extends = m5base
board = m5stack-grey

[Core2]
extends = m5base
board = m5stack-core2

[CoreS3]
extends = m5base
board = m5stack-cores3

[Fire]
extends = m5base
borad =m5stack-fire

[StampS3]
extends = m5base
board = m5stack-stamps3

[sdl]
build_flags = -O3 -xc++ -std=c++14 -lSDL2 
  -I"/usr/local/include/SDL2"                ; for intel mac homebrew SDL2
  -L"/usr/local/lib"                         ; for intel mac homebrew SDL2
  -I"${sysenv.HOMEBREW_PREFIX}/include/SDL2" ; for arm mac homebrew SDL2
  -L"${sysenv.HOMEBREW_PREFIX}/lib"          ; for arm mac homebrew SDL2
platform = native
test_filter= native/*
test_ignore= embedded/*

; --------------------------------
;Choose build options
[option_release]
build_type=release
build_flags = ${env.build_flags}   
  -DCORE_DEBUG_LEVEL=3
  -DLOG_LOCAL_LEVEL=3
  -DAPP_LOG_LEVEL=3
  -DM5_LOG_LEVEL=3

[option_log]
build_type=release
build_flags = ${env.build_flags} 
  -DCORE_DEBUG_LEVEL=5
  -DLOG_LOCAL_LEVEL=5
  -DAPP_LOG_LEVEL=5

[option_debug]
build_type=debug
build_flags = ${env.build_flags} 
  -DCORE_DEBUG_LEVEL=5
  -DLOG_LOCAL_LEVEL=5
  -DAPP_LOG_LEVEL=5
  -DDEBUG

[option_map]
build_type=release
build_flags = ${env.build_flags} 
  -DCORE_DEBUG_LEVEL=3
  -DLOG_LOCAL_LEVEL=3
  -DAPP_LOG_LEVEL=3
  -DM5_LOG_LEVEL=0
  -Wl,-Map,output.map

; --------------------------------
; For UnitTest
[test_units]
lib_deps = 

[env:test_native]
extends = sdl, option_release 
build_flags = ${sdl.build_flags} ${option_release.build_flags}
lib_deps = ${env.lib_deps} ${test_units.lib_deps}

[env:test_Core]
extends=Core, option_release
lib_deps = ${env.lib_deps} ${test_units.lib_deps}

[env:test_Core2]
extends=Core2, option_release
lib_deps = ${env.lib_deps} ${test_units.lib_deps}

[env:test_CoreS3]
extends=CoreS3, option_release
lib_deps = ${env.lib_deps} ${test_units.lib_deps}

[env:test_Fire]
extends=Fire, option_release
lib_deps = ${env.lib_deps} ${test_units.lib_deps}

[env:test_StampS3]
extends=StampS3, option_release
lib_deps = ${env.lib_deps} ${test_units.lib_deps}

[env:test_Dial]
extends=StampS3, option_release
lib_deps = ${env.lib_deps} ${test_units.lib_deps} 
  m5stack/M5Dial


; --------------------------------
; examples (Moved to the relevant library in the future)
; 
[env:example_SCD40_Core]
extends=Core, option_release
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/SCD4x>

[env:example_SCD40_CoreS3]
extends=CoreS3, option_release
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/SCD4x>

[env:example_SCD40_Dial]
extends=StampS3, option_release
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/SCD4x>
lib_deps = ${env.lib_deps} 
  m5stack/M5Dial